// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package order

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateOrderRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	CreatedAt            string   `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Type                 int32    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	VisitUuid            string   `protobuf:"bytes,4,opt,name=visit_uuid,json=visitUuid,proto3" json:"visit_uuid,omitempty"`
	StreamCode           string   `protobuf:"bytes,5,opt,name=stream_code,json=streamCode,proto3" json:"stream_code,omitempty"`
	OfferId              int32    `protobuf:"varint,6,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"`
	UserId               int32    `protobuf:"varint,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ClientUuid           string   `protobuf:"bytes,8,opt,name=client_uuid,json=clientUuid,proto3" json:"client_uuid,omitempty"`
	Status               int32    `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Sum                  float32  `protobuf:"fixed32,10,opt,name=sum,proto3" json:"sum,omitempty"`
	Payment              float32  `protobuf:"fixed32,11,opt,name=payment,proto3" json:"payment,omitempty"`
	Currency             string   `protobuf:"bytes,12,opt,name=currency,proto3" json:"currency,omitempty"`
	GeoCode              []string `protobuf:"bytes,13,rep,name=geo_code,json=geoCode,proto3" json:"geo_code,omitempty"`
	Sub1                 string   `protobuf:"bytes,14,opt,name=sub1,proto3" json:"sub1,omitempty"`
	Sub2                 string   `protobuf:"bytes,15,opt,name=sub2,proto3" json:"sub2,omitempty"`
	Sub3                 string   `protobuf:"bytes,16,opt,name=sub3,proto3" json:"sub3,omitempty"`
	Sub4                 string   `protobuf:"bytes,17,opt,name=sub4,proto3" json:"sub4,omitempty"`
	Sub5                 string   `protobuf:"bytes,18,opt,name=sub5,proto3" json:"sub5,omitempty"`
	ErrorReason          string   `protobuf:"bytes,19,opt,name=error_reason,json=errorReason,proto3" json:"error_reason,omitempty"`
	Pills                int32    `protobuf:"varint,20,opt,name=pills,proto3" json:"pills,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOrderRequest) Reset()         { *m = CreateOrderRequest{} }
func (m *CreateOrderRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOrderRequest) ProtoMessage()    {}
func (*CreateOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_order_a3e18a5d49ad4ce5, []int{0}
}
func (m *CreateOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrderRequest.Unmarshal(m, b)
}
func (m *CreateOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrderRequest.Marshal(b, m, deterministic)
}
func (dst *CreateOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrderRequest.Merge(dst, src)
}
func (m *CreateOrderRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOrderRequest.Size(m)
}
func (m *CreateOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrderRequest proto.InternalMessageInfo

func (m *CreateOrderRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *CreateOrderRequest) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *CreateOrderRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CreateOrderRequest) GetVisitUuid() string {
	if m != nil {
		return m.VisitUuid
	}
	return ""
}

func (m *CreateOrderRequest) GetStreamCode() string {
	if m != nil {
		return m.StreamCode
	}
	return ""
}

func (m *CreateOrderRequest) GetOfferId() int32 {
	if m != nil {
		return m.OfferId
	}
	return 0
}

func (m *CreateOrderRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CreateOrderRequest) GetClientUuid() string {
	if m != nil {
		return m.ClientUuid
	}
	return ""
}

func (m *CreateOrderRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CreateOrderRequest) GetSum() float32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *CreateOrderRequest) GetPayment() float32 {
	if m != nil {
		return m.Payment
	}
	return 0
}

func (m *CreateOrderRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *CreateOrderRequest) GetGeoCode() []string {
	if m != nil {
		return m.GeoCode
	}
	return nil
}

func (m *CreateOrderRequest) GetSub1() string {
	if m != nil {
		return m.Sub1
	}
	return ""
}

func (m *CreateOrderRequest) GetSub2() string {
	if m != nil {
		return m.Sub2
	}
	return ""
}

func (m *CreateOrderRequest) GetSub3() string {
	if m != nil {
		return m.Sub3
	}
	return ""
}

func (m *CreateOrderRequest) GetSub4() string {
	if m != nil {
		return m.Sub4
	}
	return ""
}

func (m *CreateOrderRequest) GetSub5() string {
	if m != nil {
		return m.Sub5
	}
	return ""
}

func (m *CreateOrderRequest) GetErrorReason() string {
	if m != nil {
		return m.ErrorReason
	}
	return ""
}

func (m *CreateOrderRequest) GetPills() int32 {
	if m != nil {
		return m.Pills
	}
	return 0
}

type Order struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	CreatedAt            string   `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Type                 int32    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	VisitUuid            string   `protobuf:"bytes,4,opt,name=visit_uuid,json=visitUuid,proto3" json:"visit_uuid,omitempty"`
	StreamCode           string   `protobuf:"bytes,5,opt,name=stream_code,json=streamCode,proto3" json:"stream_code,omitempty"`
	OfferId              int32    `protobuf:"varint,6,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"`
	UserId               int32    `protobuf:"varint,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ClientUuid           string   `protobuf:"bytes,8,opt,name=client_uuid,json=clientUuid,proto3" json:"client_uuid,omitempty"`
	Status               int32    `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Sum                  float32  `protobuf:"fixed32,10,opt,name=sum,proto3" json:"sum,omitempty"`
	Payment              float32  `protobuf:"fixed32,11,opt,name=payment,proto3" json:"payment,omitempty"`
	Currency             string   `protobuf:"bytes,12,opt,name=currency,proto3" json:"currency,omitempty"`
	GeoCode              []string `protobuf:"bytes,13,rep,name=geo_code,json=geoCode,proto3" json:"geo_code,omitempty"`
	Sub1                 string   `protobuf:"bytes,14,opt,name=sub1,proto3" json:"sub1,omitempty"`
	Sub2                 string   `protobuf:"bytes,15,opt,name=sub2,proto3" json:"sub2,omitempty"`
	Sub3                 string   `protobuf:"bytes,16,opt,name=sub3,proto3" json:"sub3,omitempty"`
	Sub4                 string   `protobuf:"bytes,17,opt,name=sub4,proto3" json:"sub4,omitempty"`
	Sub5                 string   `protobuf:"bytes,18,opt,name=sub5,proto3" json:"sub5,omitempty"`
	ErrorReason          string   `protobuf:"bytes,19,opt,name=error_reason,json=errorReason,proto3" json:"error_reason,omitempty"`
	Pills                int32    `protobuf:"varint,20,opt,name=pills,proto3" json:"pills,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_order_a3e18a5d49ad4ce5, []int{1}
}
func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (dst *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(dst, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Order) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Order) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Order) GetVisitUuid() string {
	if m != nil {
		return m.VisitUuid
	}
	return ""
}

func (m *Order) GetStreamCode() string {
	if m != nil {
		return m.StreamCode
	}
	return ""
}

func (m *Order) GetOfferId() int32 {
	if m != nil {
		return m.OfferId
	}
	return 0
}

func (m *Order) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Order) GetClientUuid() string {
	if m != nil {
		return m.ClientUuid
	}
	return ""
}

func (m *Order) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Order) GetSum() float32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *Order) GetPayment() float32 {
	if m != nil {
		return m.Payment
	}
	return 0
}

func (m *Order) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Order) GetGeoCode() []string {
	if m != nil {
		return m.GeoCode
	}
	return nil
}

func (m *Order) GetSub1() string {
	if m != nil {
		return m.Sub1
	}
	return ""
}

func (m *Order) GetSub2() string {
	if m != nil {
		return m.Sub2
	}
	return ""
}

func (m *Order) GetSub3() string {
	if m != nil {
		return m.Sub3
	}
	return ""
}

func (m *Order) GetSub4() string {
	if m != nil {
		return m.Sub4
	}
	return ""
}

func (m *Order) GetSub5() string {
	if m != nil {
		return m.Sub5
	}
	return ""
}

func (m *Order) GetErrorReason() string {
	if m != nil {
		return m.ErrorReason
	}
	return ""
}

func (m *Order) GetPills() int32 {
	if m != nil {
		return m.Pills
	}
	return 0
}

func init() {
	proto.RegisterType((*CreateOrderRequest)(nil), "order.CreateOrderRequest")
	proto.RegisterType((*Order)(nil), "order.Order")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServiceClient interface {
	CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*Order, error)
}

type orderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrderServiceClient(cc *grpc.ClientConn) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/order.OrderService/CreateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServiceServer is the server API for OrderService service.
type OrderServiceServer interface {
	CreateOrder(context.Context, *CreateOrderRequest) (*Order, error)
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderService/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).CreateOrder(ctx, req.(*CreateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "order.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrder",
			Handler:    _OrderService_CreateOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order.proto",
}

func init() { proto.RegisterFile("order.proto", fileDescriptor_order_a3e18a5d49ad4ce5) }

var fileDescriptor_order_a3e18a5d49ad4ce5 = []byte{
	// 388 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x94, 0xcd, 0x6a, 0xd5, 0x50,
	0x10, 0xc7, 0x49, 0xf3, 0x75, 0x33, 0x89, 0x5a, 0xc7, 0xa2, 0xd3, 0x82, 0x18, 0xbb, 0xca, 0xaa,
	0xe0, 0xbd, 0xad, 0x7b, 0x29, 0x08, 0x5d, 0x09, 0x11, 0xd7, 0x21, 0x4d, 0xa6, 0x25, 0x70, 0x6f,
	0x4e, 0x3c, 0x1f, 0x85, 0xfb, 0x06, 0xbe, 0xb3, 0x1b, 0xc9, 0x9c, 0x18, 0x04, 0x1f, 0x41, 0x77,
	0xf3, 0xff, 0xfd, 0x33, 0x33, 0x39, 0x67, 0x0e, 0x03, 0xb9, 0xd2, 0x3d, 0xeb, 0xab, 0x49, 0x2b,
	0xab, 0x30, 0x16, 0x71, 0xf9, 0x23, 0x02, 0xbc, 0xd5, 0xdc, 0x5a, 0xfe, 0x32, 0xeb, 0x9a, 0xbf,
	0x3b, 0x36, 0x16, 0x11, 0x22, 0xe7, 0x86, 0x9e, 0x82, 0x32, 0xa8, 0xb2, 0x5a, 0x62, 0x7c, 0x0b,
	0xd0, 0xc9, 0x97, 0x7d, 0xd3, 0x5a, 0x3a, 0x11, 0x27, 0x5b, 0xc8, 0x27, 0x49, 0xb1, 0xc7, 0x89,
	0x29, 0x2c, 0x83, 0x2a, 0xae, 0x25, 0x9e, 0x53, 0x9e, 0x06, 0x33, 0xd8, 0x46, 0x8a, 0x45, 0x3e,
	0x45, 0xc8, 0xb7, 0xb9, 0xe2, 0x3b, 0xc8, 0x8d, 0xd5, 0xdc, 0x1e, 0x9a, 0x4e, 0xf5, 0x4c, 0xb1,
	0xf8, 0xe0, 0xd1, 0xad, 0xea, 0x19, 0xcf, 0x61, 0xa3, 0x1e, 0x1e, 0x58, 0x37, 0x43, 0x4f, 0x89,
	0xd4, 0x4d, 0x45, 0xdf, 0xf5, 0xf8, 0x06, 0x52, 0x67, 0xbc, 0x93, 0x8a, 0x93, 0xcc, 0xf2, 0x4e,
	0x8a, 0x76, 0xfb, 0x81, 0xc7, 0xa5, 0xe9, 0xc6, 0x17, 0xf5, 0x48, 0xba, 0xbe, 0x86, 0xc4, 0xd8,
	0xd6, 0x3a, 0x43, 0x99, 0x4f, 0xf4, 0x0a, 0x4f, 0x21, 0x34, 0xee, 0x40, 0x50, 0x06, 0xd5, 0x49,
	0x3d, 0x87, 0x48, 0x90, 0x4e, 0xed, 0xf1, 0xc0, 0xa3, 0xa5, 0x5c, 0xe8, 0x6f, 0x89, 0x17, 0xb0,
	0xe9, 0x9c, 0xd6, 0x3c, 0x76, 0x47, 0x2a, 0xa4, 0xc3, 0xaa, 0xe7, 0x9f, 0x7e, 0x64, 0xe5, 0x8f,
	0xf4, 0xac, 0x0c, 0xab, 0xac, 0x4e, 0x1f, 0x59, 0xc9, 0x79, 0x10, 0x22, 0xe3, 0xee, 0x3f, 0xd0,
	0x73, 0x7f, 0xad, 0x73, 0xbc, 0xb0, 0x2d, 0xbd, 0x58, 0xd9, 0x76, 0x61, 0x3b, 0x3a, 0x5d, 0xd9,
	0x6e, 0x61, 0xd7, 0xf4, 0x72, 0x65, 0xd7, 0x0b, 0xbb, 0x21, 0x5c, 0xd9, 0x0d, 0xbe, 0x87, 0x82,
	0xb5, 0x56, 0xba, 0xd1, 0xdc, 0x1a, 0x35, 0xd2, 0x2b, 0xf1, 0x72, 0x61, 0xb5, 0x20, 0x3c, 0x83,
	0x78, 0x1a, 0xf6, 0x7b, 0x43, 0x67, 0x72, 0x01, 0x5e, 0x5c, 0xfe, 0x0c, 0x21, 0x96, 0x47, 0xf0,
	0x7f, 0xfa, 0xff, 0xde, 0xf4, 0xb7, 0x9f, 0xa1, 0x90, 0xe1, 0x7f, 0x65, 0xfd, 0x34, 0x74, 0x8c,
	0x1f, 0x21, 0xff, 0x63, 0x2f, 0xe0, 0xf9, 0x95, 0x5f, 0x1e, 0x7f, 0xef, 0x8a, 0x8b, 0x62, 0xb1,
	0x04, 0xde, 0x27, 0xb2, 0x5e, 0x76, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x77, 0x79, 0xfc,
	0x6d, 0x04, 0x00, 0x00,
}
